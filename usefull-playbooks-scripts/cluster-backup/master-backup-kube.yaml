---
#perform validation check: ansible-playbook  --syntax-check /root/master-backup.yaml
#sample invocation: ansible-playbook -i /etc/ansible/hosts /root/master-backup.yaml

- hosts: masters
  remote_user: root
  vars:
    #Directory that will be backed up on each master
    source_backup_dir: /root/
    # Kube dir to backup
    source_dotkube_dir: .kube
    #Prefix of the generated tar.gz file
    tar_file_prefix: kube-config
    #Temporary location where the tar file will be created.  This file will be removed.
    dest_backup_dir: /tmp
    #Location (on the Ansible host) where the tar will be copied.
    #This parameter should be updated to use a location that's backed up on the host.
    host_dest_dir: /tmp/ocp-backup
    # File name for Backups
    file_name_bkup: "{{ tar_file_prefix }}-{{ inventory_hostname }}-{{ cur_date }}{{ cur_time }}"

  #Run the backup steps, NOTE this was written vs Ansible 2.2, so the archive task does not exist.
  tasks:
    # Creating a date time 
  - name: Get time form host
    shell: "date +%Y-%m-%d-%H:%M"
    register: timestamp
  - name: setting var time stamp
    set_fact:
      cur_date: "{{ timestamp.stdout[:10] }}"
      cur_time: "{{ timestamp.stdout[10:]}}"
    #So we'll need to copy the files first, then create the tar ... or
    #Create the tar then compress the tar
  - name: Backup kube config
    shell: "tar zvcf {{ dest_backup_dir }}/{{ file_name_bkup }}.tar.gz {{ source_dotkube_dir }}"
    args: 
      chdir: "{{ source_backup_dir }}"
#  - name: Compress tar file to create tar.gz
#    shell: "gzip -f {{ dest_backup_dir }}/{{ source_dotkube_dir }}/{{ file_name_bkup }}.tar"
#    args:
#      chdir: "{{ source_backup_dir }}"
#  - name: Remove old tar file
#    file:
#      path: "{{ dest_backup_dir }}/{{ soure_dotkube_dir }}/{{ file_name_bkup }}.tar"
#      state: absent
#      recurse: no
  - name: Copy backup tar.gz back to ansible host machine at {{ host_dest_dir }}
    fetch:
      dest: "{{ host_dest_dir }}/{{ inventory_hostname }}/{{ file_name_bkup }}.tar.gz"
      src: "{{ item }}"
      flat: true
    loop:
     - /tmp/{{ file_name_bkup }}.tar.gz

# "{{ dest_backup_dir }}/{{ file_name_bkup }}.tar.gz"
  - name: Remove temp tar.gz file from master
    file:
      path: "{{ dest_backup_dir }}/{{ file_name_bkup }}.tar.gz"
      state: absent
      recurse: no
